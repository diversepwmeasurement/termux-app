jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Clone repository
      uses: actions/checkout@v4
    - continue-on-error: true
      env:
        PACKAGE_VARIANT: ${{ matrix.package_variant }}
      name: Build APKs
      run: "exit_on_error() { echo \"$1\"; exit 1; }\n\necho \"Setting vars\"\n\n\
        if [ \"$GITHUB_EVENT_NAME\" == \"pull_request\" ]; then\n    GITHUB_SHA=\"\
        ${{ github.event.pull_request.head.sha }}\" # Do not use last merge commit\
        \ set in GITHUB_SHA\nfi\n\n# Set RELEASE_VERSION_NAME to \"<CURRENT_VERSION_NAME>+<last_commit_hash>\"\
        \nCURRENT_VERSION_NAME_REGEX='\\s+versionName \"([^\"]+)\"$'\nCURRENT_VERSION_NAME=\"\
        $(grep -m 1 -E \"$CURRENT_VERSION_NAME_REGEX\" ./app/build.gradle | sed -r\
        \ \"s/$CURRENT_VERSION_NAME_REGEX/\\1/\")\"\nRELEASE_VERSION_NAME=\"v$CURRENT_VERSION_NAME+${GITHUB_SHA:0:7}\"\
        \ # The \"+\" is necessary so that versioning precedence is not affected\n\
        if ! printf \"%s\" \"${RELEASE_VERSION_NAME/v/}\" | grep -qP '^(0|[1-9]\\\
        d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\\
        .(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\\
        .[0-9a-zA-Z-]+)*))?$'; then\n exit_on_error \"The versionName '${RELEASE_VERSION_NAME/v/}'\
        \ is not a valid version as per semantic version '2.0.0' spec in the format\
        \ 'major.minor.patch(-prerelease)(+buildmetadata)'. https://semver.org/spec/v2.0.0.html.\"\
        \nfi\n\nAPK_DIR_PATH=\"./app/build/outputs/apk/debug\"\nAPK_VERSION_TAG=\"\
        $RELEASE_VERSION_NAME-${{ env.PACKAGE_VARIANT }}-github-debug\" # Note the\
        \ \"-\", GITHUB_SHA will already have \"+\" before it\nAPK_BASENAME_PREFIX=\"\
        termux-app_$APK_VERSION_TAG\"\n\n# Used by attachment steps later\necho \"\
        APK_DIR_PATH=$APK_DIR_PATH\" >> $GITHUB_ENV\necho \"APK_VERSION_TAG=$APK_VERSION_TAG\"\
        \ >> $GITHUB_ENV\necho \"APK_BASENAME_PREFIX=$APK_BASENAME_PREFIX\" >> $GITHUB_ENV\n\
        \necho \"Building APKs for 'APK_VERSION_TAG' build\"\nexport TERMUX_APP_VERSION_NAME=\"\
        ${RELEASE_VERSION_NAME/v/}\" # Used by app/build.gradle\nexport TERMUX_APK_VERSION_TAG=\"\
        $APK_VERSION_TAG\" # Used by app/build.gradle\nexport TERMUX_PACKAGE_VARIANT=\"\
        ${{ env.PACKAGE_VARIANT }}\" # Used by app/build.gradle\nif ! ./gradlew assembleDebug;\
        \ then\n  exit_on_error \"Build failed for '$APK_VERSION_TAG' build.\"\nfi\n\
        \necho \"Validating APKs\"\nfor abi in universal arm64-v8a armeabi-v7a x86_64\
        \ x86; do\n  if ! test -f \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk\"\
        ; then\n    files_found=\"$(ls \"$APK_DIR_PATH\")\"\n    exit_on_error \"\
        Failed to find built APK at '$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk'.\
        \ Files found: \"$'\\n'\"$files_found\"\n  fi\ndone\n\necho \"Generating sha25sums\
        \ file\"\nif ! (cd \"$APK_DIR_PATH\"; sha256sum \\\n  \"${APK_BASENAME_PREFIX}_universal.apk\"\
        \ \\\n  \"${APK_BASENAME_PREFIX}_arm64-v8a.apk\" \\\n  \"${APK_BASENAME_PREFIX}_armeabi-v7a.apk\"\
        \ \\\n  \"${APK_BASENAME_PREFIX}_x86_64.apk\" \\\n  \"${APK_BASENAME_PREFIX}_x86.apk\"\
        \ \\\n  > \"${APK_BASENAME_PREFIX}_sha256sums\"); then\n  exit_on_error \"\
        Generate sha25sums failed for '$APK_VERSION_TAG' release.\"\nfi\n"
      shell: bash {0}
    - continue-on-error: true
      name: Attach universal APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_universal
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_universal.apk

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    - continue-on-error: true
      name: Attach arm64-v8a APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_arm64-v8a
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_arm64-v8a.apk

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    - continue-on-error: true
      name: Attach armeabi-v7a APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_armeabi-v7a
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_armeabi-v7a.apk

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    - continue-on-error: true
      name: Attach x86_64 APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_x86_64
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_x86_64.apk

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    - continue-on-error: true
      name: Attach x86 APK file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_x86
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_x86.apk

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    - continue-on-error: true
      name: Attach sha256sums file
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APK_BASENAME_PREFIX }}_sha256sums
        path: '${{ env.APK_DIR_PATH }}/${{ env.APK_BASENAME_PREFIX }}_sha256sums

          ${{ env.APK_DIR_PATH }}/output-metadata.json

          '
    strategy:
      fail-fast: false
      matrix:
        package_variant:
        - apt-android-7
        - apt-android-5
name: Build
on:
  repository_dispatch:
    types: trigger-ga___debug_build.yml
