jobs:
  attach-apks:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Clone repository
      uses: actions/checkout@v4
      with:
        ref: ${{ env.GITHUB_REF }}
    - continue-on-error: true
      env:
        PACKAGE_VARIANT: ${{ matrix.package_variant }}
      name: Build and attach APKs to release
      run: "exit_on_error() {\n    echo \"$1\"\n    echo \"Deleting '$RELEASE_VERSION_NAME'\
        \ release and '$GITHUB_REF' tag\"\n    hub release delete \"$RELEASE_VERSION_NAME\"\
        \n    git push --delete origin \"$GITHUB_REF\"\n    exit 1\n}\n\necho \"Setting\
        \ vars\"\nRELEASE_VERSION_NAME=\"${GITHUB_REF/refs\\/tags\\//}\"\nif ! printf\
        \ \"%s\" \"${RELEASE_VERSION_NAME/v/}\" | grep -qP '^(0|[1-9]\\d*)\\.(0|[1-9]\\\
        d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\\
        d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$';\
        \ then\n exit_on_error \"The versionName '${RELEASE_VERSION_NAME/v/}' is not\
        \ a valid version as per semantic version '2.0.0' spec in the format 'major.minor.patch(-prerelease)(+buildmetadata)'.\
        \ https://semver.org/spec/v2.0.0.html.\"\nfi\n\nAPK_DIR_PATH=\"./app/build/outputs/apk/debug\"\
        \nAPK_VERSION_TAG=\"$RELEASE_VERSION_NAME+${{ env.PACKAGE_VARIANT }}-github-debug\"\
        \nAPK_BASENAME_PREFIX=\"termux-app_$APK_VERSION_TAG\"\n\necho \"Building APKs\
        \ for 'APK_VERSION_TAG' release\"\nexport TERMUX_APK_VERSION_TAG=\"$APK_VERSION_TAG\"\
        \ # Used by app/build.gradle\nexport TERMUX_PACKAGE_VARIANT=\"${{ env.PACKAGE_VARIANT\
        \ }}\" # Used by app/build.gradle\nif ! ./gradlew assembleDebug; then\n  exit_on_error\
        \ \"Build failed for '$APK_VERSION_TAG' release.\"\nfi\n\necho \"Validating\
        \ APKs\"\nfor abi in universal arm64-v8a armeabi-v7a x86_64 x86; do\n  if\
        \ ! test -f \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk\"; then\n    files_found=\"\
        $(ls \"$APK_DIR_PATH\")\"\n    exit_on_error \"Failed to find built APK at\
        \ '$APK_DIR_PATH/${APK_BASENAME_PREFIX}_$abi.apk'. Files found: \"$'\\n'\"\
        $files_found\"\n  fi\ndone\n\necho \"Generating sha25sums file\"\nif ! (cd\
        \ \"$APK_DIR_PATH\"; sha256sum \\\n  \"${APK_BASENAME_PREFIX}_universal.apk\"\
        \ \\\n  \"${APK_BASENAME_PREFIX}_arm64-v8a.apk\" \\\n  \"${APK_BASENAME_PREFIX}_armeabi-v7a.apk\"\
        \ \\\n  \"${APK_BASENAME_PREFIX}_x86_64.apk\" \\\n  \"${APK_BASENAME_PREFIX}_x86.apk\"\
        \ \\\n  > \"${APK_BASENAME_PREFIX}_sha256sums\"); then\n  exit_on_error \"\
        Generate sha25sums failed for '$APK_VERSION_TAG' release.\"\nfi\n\necho \"\
        Attaching APKs to github release\"\nif ! hub release edit \\\n-m \"\" \\\n\
        -a \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_universal.apk\" \\\n-a \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_arm64-v8a.apk\"\
        \ \\\n-a \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_armeabi-v7a.apk\" \\\n-a \"\
        $APK_DIR_PATH/${APK_BASENAME_PREFIX}_x86_64.apk\" \\\n-a \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_x86.apk\"\
        \ \\\n-a \"$APK_DIR_PATH/${APK_BASENAME_PREFIX}_sha256sums\" \\\n\"$RELEASE_VERSION_NAME\"\
        ; then\n  exit_on_error \"Attach APKs to release failed for '$APK_VERSION_TAG'\
        \ release.\"\nfi\n"
      shell: bash {0}
    strategy:
      fail-fast: false
      matrix:
        package_variant:
        - apt-android-7
        - apt-android-5
name: Attach Debug APKs To Release
on:
  repository_dispatch:
    types: trigger-ga___attach_debug_apks_to_release.yml
